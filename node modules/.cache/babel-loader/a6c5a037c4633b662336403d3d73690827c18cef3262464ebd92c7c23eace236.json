{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  let textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef) {\n      textAreaRef.style.height = \"20px\";\n      textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\n    }\n  }, [note]);\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      // i.e component is being used in New Note\n      setNewNoteFlag(true);\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: e.target.value,\n      lastEdited: Date.now()\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    className: \"note-taker-body\",\n    placeholder: \"Take a note...\",\n    type: \"text\",\n    autoFocus: true,\n    onClick: expandNewNote,\n    onChange: saveNoteBody,\n    ref: ref => textAreaRef = ref,\n    value: note.body\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","style","height","scrollHeight","expandNewNote","undefined","saveNoteBody","e","currentNote","body","target","value","lastEdited","Date","now","className","placeholder","type","autoFocus","onClick","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    let textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef) {\r\n            textAreaRef.style.height = \"20px\";\r\n            textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            // i.e component is being used in New Note\r\n            setNewNoteFlag(true);\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: e.target.value,\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <textarea\r\n            className=\"note-taker-body\"\r\n            placeholder=\"Take a note...\"\r\n            type=\"text\"\r\n            autoFocus\r\n            onClick={expandNewNote}\r\n            onChange={saveNoteBody}\r\n            ref={(ref) => (textAreaRef = ref)}\r\n            value={note.body}\r\n        />\r\n    );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,OAAO,SAASC,QAAQA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACxD,IAAIC,WAAW,GAAGT,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIQ,WAAW,EAAE;MACbA,WAAW,CAACC,KAAK,CAACC,MAAM,GAAG,MAAM;MACjCF,WAAW,CAACC,KAAK,CAACC,MAAM,GAAGF,WAAW,CAACG,YAAY,GAAG,IAAI;IAC9D;EACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,SAASQ,aAAaA,CAAA,EAAG;IACrB,IAAIN,cAAc,KAAKO,SAAS,EAAE;MAC9B;MACAP,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ;EAEA,SAASQ,YAAYA,CAACC,CAAC,EAAE;IACrBH,aAAa,CAAC,CAAC;IACfP,OAAO,CAAEW,WAAW,KAAM;MACtB,GAAGA,WAAW;MACdC,IAAI,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK;MACpBC,UAAU,EAAEC,IAAI,CAACC,GAAG,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAEA,oBACIpB,OAAA;IACIqB,SAAS,EAAC,iBAAiB;IAC3BC,WAAW,EAAC,gBAAgB;IAC5BC,IAAI,EAAC,MAAM;IACXC,SAAS;IACTC,OAAO,EAAEf,aAAc;IACvBgB,QAAQ,EAAEd,YAAa;IACvBe,GAAG,EAAGA,GAAG,IAAMrB,WAAW,GAAGqB,GAAK;IAClCV,KAAK,EAAEf,IAAI,CAACa;EAAK;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV;AAAC1B,EAAA,CAtCeJ,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}