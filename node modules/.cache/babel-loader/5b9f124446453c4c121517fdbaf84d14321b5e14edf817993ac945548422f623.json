{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport './NoteBody.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.style.height = \"20px\";\n      textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\n      textAreaRef.current.innerHTML = note.body; // Set initial HTML content\n    }\n  }, [note.body]);\n\n  // Save cursor position before the DOM update\n  function saveSelection() {\n    const selection = window.getSelection();\n    const range = selection.getRangeAt(0);\n    const preSelectionRange = range.cloneRange();\n    preSelectionRange.selectNodeContents(textAreaRef.current);\n    preSelectionRange.setEnd(range.startContainer, range.startOffset);\n    const start = preSelectionRange.toString().length;\n    return start;\n  }\n\n  // Restore cursor position after the DOM update\n  function restoreSelection(position) {\n    const selection = window.getSelection();\n    const range = document.createRange();\n    range.setStart(textAreaRef.current.firstChild, position);\n    range.setEnd(textAreaRef.current.firstChild, position);\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n\n  // Handle content changes and save the note's body\n  function saveNoteBody(e) {\n    const cursorPosition = saveSelection(); // Save the current cursor position\n\n    expandNewNote();\n    const newBody = e.target.innerHTML; // Get the current HTML content\n    setNote(currentNote => ({\n      ...currentNote,\n      body: newBody,\n      // Update note's body\n      lastEdited: Date.now()\n    }));\n    setTimeout(() => restoreSelection(cursorPosition), 0); // Restore the cursor position after state update\n  }\n  function expandNewNote() {\n    if (setNewNoteFlag) {\n      setNewNoteFlag(true); // Indicate new note\n    }\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Applies the formatting style\n    textAreaRef.current.focus(); // Keep focus on the text area\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\",\n      contentEditable: \"true\" // Enable rich text editing\n      ,\n      onClick: expandNewNote,\n      onInput: saveNoteBody // Use onInput to capture changes\n      ,\n      ref: textAreaRef,\n      suppressContentEditableWarning: true // Suppress React warning for contentEditable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","current","style","height","scrollHeight","innerHTML","body","saveSelection","selection","window","getSelection","range","getRangeAt","preSelectionRange","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","start","toString","length","restoreSelection","position","document","createRange","setStart","firstChild","removeAllRanges","addRange","saveNoteBody","e","cursorPosition","expandNewNote","newBody","target","currentNote","lastEdited","Date","now","setTimeout","applyStyle","execCommand","focus","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","onInput","ref","suppressContentEditableWarning","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport './NoteBody.css';\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    const textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef.current) {\r\n            textAreaRef.current.style.height = \"20px\";\r\n            textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\r\n            textAreaRef.current.innerHTML = note.body; // Set initial HTML content\r\n        }\r\n    }, [note.body]);\r\n\r\n    // Save cursor position before the DOM update\r\n    function saveSelection() {\r\n        const selection = window.getSelection();\r\n        const range = selection.getRangeAt(0);\r\n        const preSelectionRange = range.cloneRange();\r\n        preSelectionRange.selectNodeContents(textAreaRef.current);\r\n        preSelectionRange.setEnd(range.startContainer, range.startOffset);\r\n        const start = preSelectionRange.toString().length;\r\n        return start;\r\n    }\r\n\r\n    // Restore cursor position after the DOM update\r\n    function restoreSelection(position) {\r\n        const selection = window.getSelection();\r\n        const range = document.createRange();\r\n        range.setStart(textAreaRef.current.firstChild, position);\r\n        range.setEnd(textAreaRef.current.firstChild, position);\r\n        selection.removeAllRanges();\r\n        selection.addRange(range);\r\n    }\r\n\r\n    // Handle content changes and save the note's body\r\n    function saveNoteBody(e) {\r\n        const cursorPosition = saveSelection(); // Save the current cursor position\r\n\r\n        expandNewNote();\r\n        const newBody = e.target.innerHTML; // Get the current HTML content\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: newBody, // Update note's body\r\n            lastEdited: Date.now(),\r\n        }));\r\n\r\n        setTimeout(() => restoreSelection(cursorPosition), 0); // Restore the cursor position after state update\r\n    }\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag) {\r\n            setNewNoteFlag(true); // Indicate new note\r\n        }\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Applies the formatting style\r\n        textAreaRef.current.focus(); // Keep focus on the text area\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Formatting Toolbar */}\r\n            <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"note-taker-body\"\r\n                contentEditable=\"true\" // Enable rich text editing\r\n                onClick={expandNewNote}\r\n                onInput={saveNoteBody} // Use onInput to capture changes\r\n                ref={textAreaRef}\r\n                suppressContentEditableWarning={true} // Suppress React warning for contentEditable\r\n            />\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}