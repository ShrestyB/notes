{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  let textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef) {\n      textAreaRef.style.height = \"20px\";\n      textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\n    }\n  }, [note]);\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      // i.e component is being used in New Note\n      setNewNoteFlag(true);\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: e.target.innerHTML,\n      lastEdited: Date.now()\n    }));\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null);\n    textAreaRef.current.focus();\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\"\n      //placeholder=\"Take a note...\"\n      ,\n      contentEditable: \"true\"\n      //type=\"text\"\n      //autoFocus\n      ,\n      onClick: expandNewNote,\n      onInput: saveNoteBody,\n      ref: textAreaRef\n\n      //ref={(ref) => (textAreaRef = ref)}\n      //value={note.body}\n      ,\n      dangerouslySetInnerHTML: {\n        __html: note.body\n      } // Load saved rich text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","style","height","scrollHeight","expandNewNote","undefined","saveNoteBody","e","currentNote","body","target","innerHTML","lastEdited","Date","now","applyStyle","document","execCommand","current","focus","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","onInput","ref","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    let textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef) {\r\n            textAreaRef.style.height = \"20px\";\r\n            textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            // i.e component is being used in New Note\r\n            setNewNoteFlag(true);\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: e.target.innerHTML,\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); \r\n        textAreaRef.current.focus();\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n        <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n            </div>\r\n        <div\r\n            className=\"note-taker-body\"\r\n            //placeholder=\"Take a note...\"\r\n            contentEditable='true'\r\n            //type=\"text\"\r\n            //autoFocus\r\n            onClick={expandNewNote}\r\n            onInput={saveNoteBody}\r\n            ref={textAreaRef}\r\n\r\n            //ref={(ref) => (textAreaRef = ref)}\r\n            //value={note.body}\r\n            dangerouslySetInnerHTML={{ __html: note.body }} // Load saved rich text\r\n\r\n        />\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}