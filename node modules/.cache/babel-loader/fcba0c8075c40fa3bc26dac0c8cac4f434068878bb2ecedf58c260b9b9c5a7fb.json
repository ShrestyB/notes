{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport './NoteBody.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.style.height = \"20px\";\n      textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\n      textAreaRef.current.style.direction = \"ltr\"; // Force LTR direction\n      textAreaRef.current.style.textAlign = \"left\"; // Ensure left alignment\n    }\n  }, [note]);\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      setNewNoteFlag(true); // Indicate new note\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    const target = e.target;\n\n    // Ensure the direction is LTR\n    target.style.direction = \"ltr\";\n    target.style.textAlign = \"left\";\n    setNote(currentNote => ({\n      ...currentNote,\n      body: target.innerHTML,\n      // Save content with rich text (HTML)\n      lastEdited: Date.now()\n    }));\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Applies the formatting style\n    textAreaRef.current.focus(); // Keep focus on the text area\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\",\n      contentEditable: \"true\" // Enable rich text editing\n      ,\n      onClick: expandNewNote,\n      onInput: saveNoteBody // Use onInput to capture changes \n      ,\n      ref: textAreaRef,\n      dangerouslySetInnerHTML: {\n        __html: note.body\n      } // Load saved rich text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","current","style","height","scrollHeight","direction","textAlign","expandNewNote","undefined","saveNoteBody","e","target","currentNote","body","innerHTML","lastEdited","Date","now","applyStyle","document","execCommand","focus","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","onInput","ref","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport './NoteBody.css'; // Import the CSS file\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    const textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef.current) {\r\n            textAreaRef.current.style.height = \"20px\";\r\n            textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\r\n            textAreaRef.current.style.direction = \"ltr\"; // Force LTR direction\r\n            textAreaRef.current.style.textAlign = \"left\"; // Ensure left alignment\r\n        }\r\n    }, [note]);\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            setNewNoteFlag(true); // Indicate new note\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        const target = e.target;\r\n\r\n        // Ensure the direction is LTR\r\n        target.style.direction = \"ltr\"; \r\n        target.style.textAlign = \"left\"; \r\n\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: target.innerHTML, // Save content with rich text (HTML)\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Applies the formatting style\r\n        textAreaRef.current.focus(); // Keep focus on the text area\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Formatting Toolbar */}\r\n            <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"note-taker-body\"\r\n                contentEditable=\"true\" // Enable rich text editing\r\n                onClick={expandNewNote}\r\n                onInput={saveNoteBody} // Use onInput to capture changes \r\n                ref={textAreaRef}\r\n                dangerouslySetInnerHTML={{ __html: note.body }} // Load saved rich text\r\n            />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}