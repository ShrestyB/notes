{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport './NoteBody.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  addNote,\n  setNewNoteFlag\n}) {\n  _s();\n  const textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.style.height = \"20px\";\n      textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\n    }\n  }, [note]);\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      setNewNoteFlag(true); // Indicate new note\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: e.target.innerHTML,\n      // Save content with rich text (HTML)\n      lastEdited: Date.now()\n    }));\n  }\n  function addNote() {\n    // Perform any note-saving logic here if needed\n\n    // Clear the note content\n    setNote({\n      ...note,\n      body: \"\",\n      // Clear the note's body\n      lastEdited: Date.now() // Optionally update the timestamp\n    });\n    if (setNewNoteFlag) {\n      setNewNoteFlag(false); // Assuming you want to close the editor\n    }\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Applies the formatting style\n    textAreaRef.current.focus(); // Keep focus on the text area\n  }\n  const alignText = alignment => {\n    document.execCommand('justify' + alignment, false, null); // Align text\n    textAreaRef.current.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Left\"),\n        title: \"Align Left\",\n        children: \"Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Center\"),\n        title: \"Align Center\",\n        children: \"Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Right\"),\n        title: \"Align Right\",\n        children: \"Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Justify\"),\n        title: \"Justify\",\n        children: \"Justify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\",\n      contentEditable: \"true\" // Enable rich text editing\n      ,\n      onClick: expandNewNote,\n      onChange: saveNoteBody // Use onInput to capture changes\n      ,\n      ref: textAreaRef,\n      dangerouslySetInnerHTML: {\n        __html: note.body\n      } // Load saved rich text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","addNote","setNewNoteFlag","_s","textAreaRef","current","style","height","scrollHeight","expandNewNote","undefined","saveNoteBody","e","currentNote","body","target","innerHTML","lastEdited","Date","now","applyStyle","document","execCommand","focus","alignText","alignment","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","contentEditable","onChange","ref","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport './NoteBody.css'; // Import the CSS file\r\n\r\nexport function NoteBody({ note, setNote,addNote,setNewNoteFlag }) {\r\n    const textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef.current) {\r\n            textAreaRef.current.style.height = \"20px\";\r\n            textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            setNewNoteFlag(true); // Indicate new note\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: e.target.innerHTML, // Save content with rich text (HTML)\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    function addNote() {\r\n        // Perform any note-saving logic here if needed\r\n    \r\n        // Clear the note content\r\n        setNote({\r\n            ...note,\r\n            body: \"\", // Clear the note's body\r\n            lastEdited: Date.now() // Optionally update the timestamp\r\n        });\r\n        if (setNewNoteFlag) {\r\n            setNewNoteFlag(false); // Assuming you want to close the editor\r\n        }\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Applies the formatting style\r\n        textAreaRef.current.focus(); // Keep focus on the text area\r\n    }\r\n    const alignText = (alignment) => {\r\n               document.execCommand('justify' + alignment, false, null); // Align text\r\n                textAreaRef.current.focus();\r\n           };\r\n\r\n    return (\r\n        <>\r\n            {/* Formatting Toolbar */}\r\n            <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n                <button onClick={() => alignText(\"Left\")} title=\"Align Left\">\r\n                     Left\r\n                 </button>\r\n                 <button onClick={() => alignText(\"Center\")} title=\"Align Center\">\r\n                    Center\r\n                 </button>\r\n                 <button onClick={() => alignText(\"Right\")} title=\"Align Right\">\r\n                     Right\r\n                 </button>\r\n                <button onClick={() => alignText(\"Justify\")} title=\"Justify\">\r\n                     Justify\r\n                 </button>\r\n            </div>\r\n            <div\r\n                className=\"note-taker-body\"\r\n                contentEditable=\"true\" // Enable rich text editing\r\n                onClick={expandNewNote}\r\n                onChange={saveNoteBody} // Use onInput to capture changes\r\n                ref={textAreaRef}\r\n                dangerouslySetInnerHTML={{ __html: note.body }} // Load saved rich text\r\n            />\r\n        </>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}