{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getGlossaryTerms } from \"./GlossaryService\"; // Import the service\nimport './NoteBody.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  const [text, setText] = useState(note.body);\n  const [highlightedText, setHighlightedText] = useState(note.body);\n  useEffect(() => {\n    // Fetch glossary terms and update highlighted text\n    const fetchTermsAndHighlight = async () => {\n      const terms = await getGlossaryTerms(text);\n      setHighlightedText(highlightTerms(text, terms));\n    };\n    fetchTermsAndHighlight();\n  }, [text]);\n  function highlightTerms(text, terms) {\n    let modifiedText = text;\n    terms.forEach(term => {\n      const regex = new RegExp(`\\\\b(${term.term})\\\\b`, 'gi');\n      modifiedText = modifiedText.replace(regex, `<span class=\"highlighted-term\" title=\"${term.explanation}\">$1</span>`);\n    });\n    return modifiedText;\n  }\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      setNewNoteFlag(true); // Indicate new note\n    }\n  }\n  function saveNoteBody() {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: text.split('').reverse().join(''),\n      // Save the text in reverse\n      lastEdited: Date.now()\n    }));\n  }\n  function handleInput(e) {\n    const inputText = e.target.innerText; // Get the current text\n    setText(inputText); // Update the state with the normal text\n    e.target.innerHTML = inputText.split('').reverse().join(''); // Display reversed text\n    placeCaretAtEnd(e.target); // Keep caret at the end after reversing\n  }\n  function placeCaretAtEnd(el) {\n    el.focus();\n    const range = document.createRange();\n    range.selectNodeContents(el);\n    range.collapse(false); // Collapse to the end\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Apply formatting style\n    document.getElementById(\"noteBody\").focus(); // Keep focus on the note body\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"noteBody\",\n      className: \"note-taker-body\",\n      contentEditable: \"true\",\n      onClick: expandNewNote,\n      onInput: handleInput,\n      onBlur: saveNoteBody // Save on blur\n      ,\n      dangerouslySetInnerHTML: {\n        __html: highlightedText.split('').reverse().join('')\n      } // Display highlighted text normally\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"0OXr0B6DCJCVb0bXu8/A1CeElNM=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useEffect","useState","getGlossaryTerms","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","setNewNoteFlag","_s","text","setText","body","highlightedText","setHighlightedText","fetchTermsAndHighlight","terms","highlightTerms","modifiedText","forEach","term","regex","RegExp","replace","explanation","expandNewNote","undefined","saveNoteBody","currentNote","split","reverse","join","lastEdited","Date","now","handleInput","e","inputText","target","innerText","innerHTML","placeCaretAtEnd","el","focus","range","document","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","applyStyle","style","execCommand","getElementById","children","className","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","id","contentEditable","onInput","onBlur","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getGlossaryTerms } from \"./GlossaryService\"; // Import the service\r\nimport './NoteBody.css';\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    const [text, setText] = useState(note.body);\r\n    const [highlightedText, setHighlightedText] = useState(note.body);\r\n\r\n    useEffect(() => {\r\n        // Fetch glossary terms and update highlighted text\r\n        const fetchTermsAndHighlight = async () => {\r\n            const terms = await getGlossaryTerms(text);\r\n            setHighlightedText(highlightTerms(text, terms));\r\n        };\r\n        fetchTermsAndHighlight();\r\n    }, [text]);\r\n\r\n    function highlightTerms(text, terms) {\r\n        let modifiedText = text;\r\n        terms.forEach(term => {\r\n            const regex = new RegExp(`\\\\b(${term.term})\\\\b`, 'gi');\r\n            modifiedText = modifiedText.replace(regex, `<span class=\"highlighted-term\" title=\"${term.explanation}\">$1</span>`);\r\n        });\r\n        return modifiedText;\r\n    }\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            setNewNoteFlag(true); // Indicate new note\r\n        }\r\n    }\r\n\r\n    function saveNoteBody() {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: text.split('').reverse().join(''), // Save the text in reverse\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    function handleInput(e) {\r\n        const inputText = e.target.innerText; // Get the current text\r\n        setText(inputText); // Update the state with the normal text\r\n        e.target.innerHTML = inputText.split('').reverse().join(''); // Display reversed text\r\n        placeCaretAtEnd(e.target); // Keep caret at the end after reversing\r\n    }\r\n\r\n    function placeCaretAtEnd(el) {\r\n        el.focus();\r\n        const range = document.createRange();\r\n        range.selectNodeContents(el);\r\n        range.collapse(false); // Collapse to the end\r\n        const sel = window.getSelection();\r\n        sel.removeAllRanges();\r\n        sel.addRange(range);\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Apply formatting style\r\n        document.getElementById(\"noteBody\").focus(); // Keep focus on the note body\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* Formatting Toolbar */}\r\n            <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n            </div>\r\n            <div\r\n                id=\"noteBody\"\r\n                className=\"note-taker-body\"\r\n                contentEditable=\"true\"\r\n                onClick={expandNewNote}\r\n                onInput={handleInput}\r\n                onBlur={saveNoteBody} // Save on blur\r\n                dangerouslySetInnerHTML={{ __html: highlightedText.split('').reverse().join('') }} // Display highlighted text normally\r\n            />\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}