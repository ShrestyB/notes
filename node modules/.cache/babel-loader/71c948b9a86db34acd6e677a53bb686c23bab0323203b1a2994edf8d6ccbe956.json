{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  let textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef) {\n      textAreaRef.style.height = \"20px\";\n      textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\n    }\n  }, [note]);\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      // i.e component is being used in New Note\n      setNewNoteFlag(true);\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: e.target.value,\n      lastEdited: Date.now()\n    }));\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Applies the formatting style\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        children: \"Bold\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        children: \"Italic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        children: \"Underline\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\",\n      placeholder: \"Take a note...\",\n      contentEditable: \"true\" // Enable rich text editing\n      ,\n\n      onClick: expandNewNote,\n      onChange: saveNoteBody,\n      ref: ref => textAreaRef = ref,\n      value: note.body,\n      dangerouslySetInnerHTML: {\n        __html: note.body\n      } // Load saved rich text\n      ,\n      style: {\n        minHeight: \"10px \",\n        padding: \"10px\",\n        //border: \"1px solid #ccc\",\n        whiteSpace: \"pre-wrap\",\n        overflowWrap: \"break-word\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","useRef","useEffect","style","height","scrollHeight","expandNewNote","undefined","saveNoteBody","e","currentNote","body","target","value","lastEdited","Date","now","applyStyle","document","execCommand","_jsxDEV","_Fragment","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","contentEditable","onChange","ref","dangerouslySetInnerHTML","__html","minHeight","padding","whiteSpace","overflowWrap","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["export function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    let textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef) {\r\n            textAreaRef.style.height = \"20px\";\r\n            textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            // i.e component is being used in New Note\r\n            setNewNoteFlag(true);\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: e.target.value,\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Applies the formatting style\r\n    }\r\n    return (\r\n        <>\r\n\r\n        <div className=\"formatting-buttons\">\r\n        <button onClick={() => applyStyle(\"bold\")}>Bold</button>\r\n        <button onClick={() => applyStyle(\"italic\")}>Italic</button>\r\n        <button onClick={() => applyStyle(\"underline\")}>Underline</button>\r\n    </div>\r\n        <div\r\n            className=\"note-taker-body\"\r\n            placeholder=\"Take a note...\"\r\n            contentEditable=\"true\" // Enable rich text editing\r\n\r\n            onClick={expandNewNote}\r\n           onChange={saveNoteBody}\r\n            ref={(ref) => (textAreaRef = ref)}\r\n            value={note.body}\r\n            dangerouslySetInnerHTML={{ __html: note.body }} // Load saved rich text\r\n            style={{\r\n                minHeight: \"10px \",\r\n                padding: \"10px\",\r\n                //border: \"1px solid #ccc\",\r\n                whiteSpace: \"pre-wrap\",\r\n                overflowWrap: \"break-word\",\r\n                \r\n            }}\r\n\r\n        />\r\n        </>\r\n    );\r\n}"],"mappings":";;;AAAA,OAAO,SAASA,QAAQA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EACxD,IAAIC,WAAW,GAAGC,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIF,WAAW,EAAE;MACbA,WAAW,CAACG,KAAK,CAACC,MAAM,GAAG,MAAM;MACjCJ,WAAW,CAACG,KAAK,CAACC,MAAM,GAAGJ,WAAW,CAACK,YAAY,GAAG,IAAI;IAC9D;EACJ,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,SAASU,aAAaA,CAAA,EAAG;IACrB,IAAIR,cAAc,KAAKS,SAAS,EAAE;MAC9B;MACAT,cAAc,CAAC,IAAI,CAAC;IACxB;EACJ;EAEA,SAASU,YAAYA,CAACC,CAAC,EAAE;IACrBH,aAAa,CAAC,CAAC;IACfT,OAAO,CAAEa,WAAW,KAAM;MACtB,GAAGA,WAAW;MACdC,IAAI,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK;MACpBC,UAAU,EAAEC,IAAI,CAACC,GAAG,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,UAAUA,CAACd,KAAK,EAAE;IACvBe,QAAQ,CAACC,WAAW,CAAChB,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;EAC9C;EACA,oBACIiB,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBAEAF,OAAA;MAAKG,SAAS,EAAC,oBAAoB;MAAAD,QAAA,gBACnCF,OAAA;QAAQI,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,MAAM,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxDR,OAAA;QAAQI,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,QAAQ,CAAE;QAAAK,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5DR,OAAA;QAAQI,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,WAAW,CAAE;QAAAK,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACFR,OAAA;MACIG,SAAS,EAAC,iBAAiB;MAC3BM,WAAW,EAAC,gBAAgB;MAC5BC,eAAe,EAAC,MAAM,CAAC;MAAA;;MAEvBN,OAAO,EAAElB,aAAc;MACxByB,QAAQ,EAAEvB,YAAa;MACtBwB,GAAG,EAAGA,GAAG,IAAMhC,WAAW,GAAGgC,GAAK;MAClCnB,KAAK,EAAEjB,IAAI,CAACe,IAAK;MACjBsB,uBAAuB,EAAE;QAAEC,MAAM,EAAEtC,IAAI,CAACe;MAAK,CAAE,CAAC;MAAA;MAChDR,KAAK,EAAE;QACHgC,SAAS,EAAE,OAAO;QAClBC,OAAO,EAAE,MAAM;QACf;QACAC,UAAU,EAAE,UAAU;QACtBC,YAAY,EAAE;MAElB;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC;EAAA,eACA,CAAC;AAEX;AAAC7B,EAAA,CA3DeJ,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}