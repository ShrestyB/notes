{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\DisplayNotes\\\\NoteCard.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { NoteFooter } from \"../Helpers/NoteFooter\";\nimport { UnpinSvg, PinSvg } from \"../Helpers/Svg\";\nimport { useNotes } from \"../../ContextProviders/NotesContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NoteCard({\n  noteId\n}) {\n  _s();\n  const {\n    notesList,\n    setNotesList,\n    setEditNote,\n    setEditModal\n  } = useNotes();\n  const note = notesList[noteId];\n  function displayEditModal() {\n    setEditModal(true);\n    setEditNote(note);\n  }\n  function togglePin() {\n    function getNewList(currentNotesList) {\n      const newNotesList = {\n        ...currentNotesList\n      };\n      delete newNotesList[noteId];\n      const newNote = {\n        ...note\n      };\n      if (note.pinned) {\n        newNote.pinned = false;\n      } else {\n        newNote.pinned = true;\n      }\n      return {\n        [noteId]: {\n          ...newNote,\n          lastModified: Date.now()\n        },\n        ...newNotesList\n      };\n    }\n    setNotesList(currentNotesList => getNewList(currentNotesList));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: {\n      backgroundColor: `${note.colour}`\n    },\n    onClick: displayEditModal,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-title\",\n      children: note.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"card-pin-button\",\n      onClick: e => {\n        togglePin();\n        e.stopPropagation();\n      },\n      children: note.pinned ? /*#__PURE__*/_jsxDEV(UnpinSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(PinSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"card-body\",\n      children: note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(NoteFooter, {\n        className: \"card-footer\",\n        note: note\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, note.uuid, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteCard, \"GsLz9O2slUHUjPK5O+vkhgnyEo4=\", false, function () {\n  return [useNotes];\n});\n_c = NoteCard;\nvar _c;\n$RefreshReg$(_c, \"NoteCard\");","map":{"version":3,"names":["React","NoteFooter","UnpinSvg","PinSvg","useNotes","jsxDEV","_jsxDEV","NoteCard","noteId","_s","notesList","setNotesList","setEditNote","setEditModal","note","displayEditModal","togglePin","getNewList","currentNotesList","newNotesList","newNote","pinned","lastModified","Date","now","className","style","backgroundColor","colour","onClick","children","title","fileName","_jsxFileName","lineNumber","columnNumber","e","stopPropagation","body","uuid","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/DisplayNotes/NoteCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { NoteFooter } from \"../Helpers/NoteFooter\";\r\nimport { UnpinSvg, PinSvg } from \"../Helpers/Svg\";\r\nimport { useNotes } from \"../../ContextProviders/NotesContext\";\r\n\r\nexport function NoteCard({ noteId }) {\r\n    const { notesList, setNotesList, setEditNote, setEditModal } = useNotes();\r\n    const note = notesList[noteId];\r\n\r\n    function displayEditModal() {\r\n        setEditModal(true);\r\n        setEditNote(note);\r\n    }\r\n\r\n    function togglePin() {\r\n        function getNewList(currentNotesList) {\r\n            const newNotesList = { ...currentNotesList };\r\n            delete newNotesList[noteId];\r\n            const newNote = { ...note };\r\n\r\n            if (note.pinned) {\r\n                newNote.pinned = false;\r\n            } else {\r\n                newNote.pinned = true;\r\n            }\r\n\r\n            return {\r\n                [noteId]: { ...newNote, lastModified: Date.now() },\r\n                ...newNotesList,\r\n            };\r\n        }\r\n\r\n        setNotesList((currentNotesList) => getNewList(currentNotesList));\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className=\"card\"\r\n            style={{\r\n                backgroundColor: `${note.colour}`,\r\n            }}\r\n            onClick={displayEditModal}\r\n            key={note.uuid}\r\n        >\r\n            <div className=\"card-title\">{note.title}</div>\r\n\r\n            <button\r\n                className=\"card-pin-button\"\r\n                onClick={(e) => {\r\n                    togglePin();\r\n                    e.stopPropagation();\r\n                }}\r\n            >\r\n                {note.pinned ? <UnpinSvg /> : <PinSvg />}\r\n            </button>\r\n\r\n            <p className=\"card-body\">{note.body}</p>\r\n\r\n            <div className=\"card-footer\">\r\n                <NoteFooter className=\"card-footer\" note={note} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}