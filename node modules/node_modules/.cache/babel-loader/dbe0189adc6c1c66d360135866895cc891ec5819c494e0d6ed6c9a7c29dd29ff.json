{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteTitle.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport { UnpinSvg, PinSvg } from \"../Helpers/Svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function NoteTitle({\n  note,\n  setNote\n}) {\n  _s();\n  let textAreaRef = useRef(null);\n  useEffect(() => {\n    if (textAreaRef) {\n      textAreaRef.style.minHeight = \"16px\";\n      textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\n    }\n  }, [note]);\n  function saveNoteTitle(e) {\n    setNote(currentNote => ({\n      ...currentNote,\n      title: e.target.value,\n      lastEdited: Date.now()\n    }));\n  }\n  function togglePin() {\n    setNote(currentNote => ({\n      ...currentNote,\n      pinned: !note.pinned,\n      lastModified: Date.now()\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-taker-title\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"title-input\",\n      style: {\n        display: \"inline\"\n      },\n      placeholder: \"Title\",\n      type: \"text\",\n      onChange: saveNoteTitle,\n      ref: ref => textAreaRef = ref,\n      value: note.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"title-pin-button\",\n      style: {\n        display: \"inline\"\n      },\n      onClick: togglePin,\n      children: note.pinned ? /*#__PURE__*/_jsxDEV(UnpinSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this) : /*#__PURE__*/_jsxDEV(PinSvg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 47\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteTitle, \"sgKjUq37zymv5NZ2Nt9pN3iZA3Y=\");\n_c = NoteTitle;\nvar _c;\n$RefreshReg$(_c, \"NoteTitle\");","map":{"version":3,"names":["React","useRef","useEffect","UnpinSvg","PinSvg","jsxDEV","_jsxDEV","NoteTitle","note","setNote","_s","textAreaRef","style","minHeight","height","scrollHeight","saveNoteTitle","e","currentNote","title","target","value","lastEdited","Date","now","togglePin","pinned","lastModified","className","children","display","placeholder","type","onChange","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteTitle.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\nimport { UnpinSvg, PinSvg } from \"../Helpers/Svg\";\r\n\r\nexport function NoteTitle({ note, setNote }) {\r\n    let textAreaRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef) {\r\n            textAreaRef.style.minHeight = \"16px\";\r\n            textAreaRef.style.height = textAreaRef.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    function saveNoteTitle(e) {\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            title: e.target.value,\r\n            lastEdited: Date.now(),\r\n        }));\r\n    }\r\n\r\n    function togglePin() {\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            pinned: !note.pinned,\r\n            lastModified: Date.now(),\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"note-taker-title\">\r\n            <textarea\r\n                className=\"title-input\"\r\n                style={{ display: \"inline\" }}\r\n                placeholder=\"Title\"\r\n                type=\"text\"\r\n                onChange={saveNoteTitle}\r\n                ref={(ref) => (textAreaRef = ref)}\r\n                value={note.title}\r\n            />\r\n\r\n            <button\r\n                className=\"title-pin-button\"\r\n                style={{ display: \"inline\" }}\r\n                onClick={togglePin}\r\n            >\r\n                {note.pinned ? <UnpinSvg /> : <PinSvg />}\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,QAAQ,EAAEC,MAAM,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,SAASC,SAASA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,EAAE;EAAAC,EAAA;EACzC,IAAIC,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACZ,IAAIS,WAAW,EAAE;MACbA,WAAW,CAACC,KAAK,CAACC,SAAS,GAAG,MAAM;MACpCF,WAAW,CAACC,KAAK,CAACE,MAAM,GAAGH,WAAW,CAACI,YAAY,GAAG,IAAI;IAC9D;EACJ,CAAC,EAAE,CAACP,IAAI,CAAC,CAAC;EAEV,SAASQ,aAAaA,CAACC,CAAC,EAAE;IACtBR,OAAO,CAAES,WAAW,KAAM;MACtB,GAAGA,WAAW;MACdC,KAAK,EAAEF,CAAC,CAACG,MAAM,CAACC,KAAK;MACrBC,UAAU,EAAEC,IAAI,CAACC,GAAG,CAAC;IACzB,CAAC,CAAC,CAAC;EACP;EAEA,SAASC,SAASA,CAAA,EAAG;IACjBhB,OAAO,CAAES,WAAW,KAAM;MACtB,GAAGA,WAAW;MACdQ,MAAM,EAAE,CAAClB,IAAI,CAACkB,MAAM;MACpBC,YAAY,EAAEJ,IAAI,CAACC,GAAG,CAAC;IAC3B,CAAC,CAAC,CAAC;EACP;EAEA,oBACIlB,OAAA;IAAKsB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BvB,OAAA;MACIsB,SAAS,EAAC,aAAa;MACvBhB,KAAK,EAAE;QAAEkB,OAAO,EAAE;MAAS,CAAE;MAC7BC,WAAW,EAAC,OAAO;MACnBC,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAEjB,aAAc;MACxBkB,GAAG,EAAGA,GAAG,IAAMvB,WAAW,GAAGuB,GAAK;MAClCb,KAAK,EAAEb,IAAI,CAACW;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEFhC,OAAA;MACIsB,SAAS,EAAC,kBAAkB;MAC5BhB,KAAK,EAAE;QAAEkB,OAAO,EAAE;MAAS,CAAE;MAC7BS,OAAO,EAAEd,SAAU;MAAAI,QAAA,EAElBrB,IAAI,CAACkB,MAAM,gBAAGpB,OAAA,CAACH,QAAQ;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAAGhC,OAAA,CAACF,MAAM;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAAC5B,EAAA,CA/CeH,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}