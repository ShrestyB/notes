{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sem7\\\\PlayPower\\\\notes\\\\src\\\\components\\\\Helpers\\\\NoteBody.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport './NoteBody.css';\nimport Tooltip from '@mui/material/Tooltip';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function NoteBody({\n  note,\n  setNote,\n  setNewNoteFlag\n}) {\n  _s();\n  const textAreaRef = useRef(null);\n  const [inferredWords, setInferredWords] = useState({});\n  useEffect(() => {\n    if (textAreaRef.current) {\n      textAreaRef.current.style.height = \"20px\";\n      textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\n    }\n  }, [note]);\n  useEffect(() => {\n    inferWordMeanings(note.body); // Call API when note body changes\n  }, [note.body]);\n  async function inferWordMeanings(text) {\n    try {\n      const API_URL = 'https://api-inference.huggingface.co/models/distilbert-base-uncased';\n      const API_KEY = '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';\n      const words = text.split(' ');\n      let difficultWords = words.filter(word => word.length > 6);\n      let wordMeanings = {};\n      for (const word of difficultWords) {\n        var _result$;\n        const response = await fetch(API_URL, {\n          method: \"POST\",\n          headers: {\n            Authorization: `Bearer ${API_KEY}`,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            inputs: `What is the meaning of ${word}?`\n          })\n        });\n        const result = await response.json();\n        console.log(`Response for word \"${word}\":`, result);\n        wordMeanings[word] = (result === null || result === void 0 ? void 0 : (_result$ = result[0]) === null || _result$ === void 0 ? void 0 : _result$.label) || \"Unknown\";\n      }\n      setInferredWords(wordMeanings);\n    } catch (error) {\n      console.error(\"Error fetching word meanings:\", error);\n    }\n  }\n  function expandNewNote() {\n    if (setNewNoteFlag !== undefined) {\n      setNewNoteFlag(true); // Indicate new note\n    }\n  }\n  function saveNoteBody(e) {\n    expandNewNote();\n    setNote(currentNote => ({\n      ...currentNote,\n      body: e.target.innerHTML,\n      // Save content with rich text (HTML)\n      lastEdited: Date.now()\n    }));\n    if (setNewNoteFlag) {\n      setNewNoteFlag(false);\n    }\n  }\n  function applyStyle(style) {\n    document.execCommand(style, false, null); // Applies the formatting style\n    textAreaRef.current.focus();\n  }\n  const alignText = alignment => {\n    document.execCommand('justify' + alignment, false, null); // Align text\n    textAreaRef.current.focus();\n  };\n  const changeFontSize = size => {\n    document.execCommand(\"fontSize\", false, \"5\");\n    const spans = document.getElementsByTagName(\"span\");\n    for (let i = 0; i < spans.length; i++) {\n      spans[i].style.fontSize = size;\n    }\n    textAreaRef.current.focus();\n  };\n\n  // Function to dynamically render text with Tooltip\n  const renderWithTooltips = text => {\n    const words = text.split(' ');\n    return words.map((word, index) => {\n      if (inferredWords[word]) {\n        return /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: inferredWords[word],\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: \"underline\",\n              cursor: \"pointer\",\n              color: \"blue\"\n            },\n            children: word\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [word, \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 20\n      }, this);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formatting-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"bold\"),\n        title: \"Bold\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"B\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"italic\"),\n        title: \"Italic\",\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"I\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => applyStyle(\"underline\"),\n        title: \"Underline\",\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: \"U\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Left\"),\n        title: \"Align Left\",\n        children: \"Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Center\"),\n        title: \"Align Center\",\n        children: \"Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Right\"),\n        title: \"Align Right\",\n        children: \"Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alignText(\"Justify\"),\n        title: \"Justify\",\n        children: \"Justify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => changeFontSize(e.target.value),\n          title: \"Font Size\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"18px\",\n            children: \"18px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"20px\",\n            children: \"20px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"22px\",\n            children: \"22px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-taker-body\",\n      contentEditable: \"false\" // Disable direct editing here\n      ,\n      onClick: expandNewNote,\n      onChange: saveNoteBody,\n      ref: textAreaRef,\n      children: [renderWithTooltips(note.body), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(NoteBody, \"xyu4SZreNzVT6BFcaOSjKg33JxU=\");\n_c = NoteBody;\nvar _c;\n$RefreshReg$(_c, \"NoteBody\");","map":{"version":3,"names":["React","useRef","useEffect","useState","Tooltip","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBody","note","setNote","setNewNoteFlag","_s","textAreaRef","inferredWords","setInferredWords","current","style","height","scrollHeight","inferWordMeanings","body","text","API_URL","API_KEY","words","split","difficultWords","filter","word","length","wordMeanings","_result$","response","fetch","method","headers","Authorization","JSON","stringify","inputs","result","json","console","log","label","error","expandNewNote","undefined","saveNoteBody","e","currentNote","target","innerHTML","lastEdited","Date","now","applyStyle","document","execCommand","focus","alignText","alignment","changeFontSize","size","spans","getElementsByTagName","i","fontSize","renderWithTooltips","map","index","title","children","textDecoration","cursor","color","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange","value","contentEditable","ref","_c","$RefreshReg$"],"sources":["C:/Sem7/PlayPower/notes/src/components/Helpers/NoteBody.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport './NoteBody.css'; \r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nexport function NoteBody({ note, setNote, setNewNoteFlag }) {\r\n    const textAreaRef = useRef(null);\r\n    const [inferredWords, setInferredWords] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (textAreaRef.current) {\r\n            textAreaRef.current.style.height = \"20px\";\r\n            textAreaRef.current.style.height = textAreaRef.current.scrollHeight + \"px\";\r\n        }\r\n    }, [note]);\r\n\r\n    useEffect(() => {\r\n        inferWordMeanings(note.body); // Call API when note body changes\r\n    }, [note.body]);\r\n\r\n    \r\nasync function inferWordMeanings(text) {\r\n    try {\r\n        const API_URL = 'https://api-inference.huggingface.co/models/distilbert-base-uncased';\r\n        const API_KEY = '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';\r\n\r\n        const words = text.split(' ');\r\n        let difficultWords = words.filter(word => word.length > 6);\r\n\r\n        let wordMeanings = {};\r\n        for (const word of difficultWords) {\r\n            const response = await fetch(API_URL, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${API_KEY}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    inputs: `What is the meaning of ${word}?`,\r\n                }),\r\n            });\r\n\r\n            const result = await response.json();\r\n            console.log(`Response for word \"${word}\":`, result);\r\n\r\n            wordMeanings[word] = result?.[0]?.label || \"Unknown\";\r\n        }\r\n\r\n        setInferredWords(wordMeanings);\r\n    } catch (error) {\r\n        console.error(\"Error fetching word meanings:\", error);\r\n    }\r\n}\r\n\r\n\r\n    function expandNewNote() {\r\n        if (setNewNoteFlag !== undefined) {\r\n            setNewNoteFlag(true); // Indicate new note\r\n        }\r\n    }\r\n\r\n    function saveNoteBody(e) {\r\n        expandNewNote();\r\n        setNote((currentNote) => ({\r\n            ...currentNote,\r\n            body: e.target.innerHTML, // Save content with rich text (HTML)\r\n            lastEdited: Date.now(),\r\n        }));\r\n\r\n        if (setNewNoteFlag) {\r\n            setNewNoteFlag(false); \r\n        }\r\n    }\r\n\r\n    function applyStyle(style) {\r\n        document.execCommand(style, false, null); // Applies the formatting style\r\n        textAreaRef.current.focus(); \r\n    }\r\n\r\n    const alignText = (alignment) => {\r\n        document.execCommand('justify' + alignment, false, null); // Align text\r\n        textAreaRef.current.focus();\r\n    };\r\n\r\n    const changeFontSize = (size) => {\r\n        document.execCommand(\"fontSize\", false, \"5\");\r\n        const spans = document.getElementsByTagName(\"span\");\r\n        for (let i = 0; i < spans.length; i++) {\r\n            spans[i].style.fontSize = size; \r\n        }\r\n        textAreaRef.current.focus();\r\n    };\r\n\r\n    // Function to dynamically render text with Tooltip\r\n    const renderWithTooltips = (text) => {\r\n        const words = text.split(' ');\r\n        return words.map((word, index) => {\r\n            if (inferredWords[word]) {\r\n                return (\r\n                    <Tooltip title={inferredWords[word]} key={index}>\r\n                        <span style={{ textDecoration: \"underline\", cursor: \"pointer\", color: \"blue\" }}>\r\n                            {word}\r\n                        </span>\r\n                    </Tooltip>\r\n                );\r\n            }\r\n            return <span key={index}>{word} </span>;\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"formatting-buttons\">\r\n                <button onClick={() => applyStyle(\"bold\")} title=\"Bold\">\r\n                    <strong>B</strong>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"italic\")} title=\"Italic\">\r\n                    <em>I</em>\r\n                </button>\r\n                <button onClick={() => applyStyle(\"underline\")} title=\"Underline\">\r\n                    <u>U</u>\r\n                </button>\r\n                <button onClick={() => alignText(\"Left\")} title=\"Align Left\">\r\n                    Left\r\n                </button>\r\n                <button onClick={() => alignText(\"Center\")} title=\"Align Center\">\r\n                    Center\r\n                </button>\r\n                <button onClick={() => alignText(\"Right\")} title=\"Align Right\">\r\n                    Right\r\n                </button>\r\n                <button onClick={() => alignText(\"Justify\")} title=\"Justify\">\r\n                    Justify\r\n                </button>\r\n                <button>\r\n                    <select onChange={(e) => changeFontSize(e.target.value)} title=\"Font Size\">\r\n                        <option value=\"\"></option>\r\n                        <option value=\"18px\">18px</option>\r\n                        <option value=\"20px\">20px</option>\r\n                        <option value=\"22px\">22px</option>\r\n                    </select>\r\n                </button>\r\n            </div>\r\n\r\n            <div\r\n                className=\"note-taker-body\"\r\n                contentEditable=\"false\" // Disable direct editing here\r\n                onClick={expandNewNote}\r\n                onChange={saveNoteBody}\r\n                ref={textAreaRef}\r\n            >\r\n                {renderWithTooltips(note.body)} {/* Render text with tooltips */}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}